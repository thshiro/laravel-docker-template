FROM php:7.3-fpm

# Set working directory
WORKDIR /var/www/src

# Install dependencies
RUN apt-get update && apt-get install -y \
        build-essential \
        default-mysql-client \
        libzip-dev \
        libpng-dev \
        libjpeg62-turbo-dev \
        libfreetype6-dev \
        locales \
        jpegoptim optipng pngquant gifsicle \
        nano \
        curl \
        unzip \
        cron \
        supervisor

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Redis EXT
RUN pecl install -o -f redis \
&&  rm -rf /tmp/pear \
&&  docker-php-ext-enable redis

# Install extensions
RUN docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/
RUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl sockets gd

# Install composer
RUN curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer

# Install composer dependencies
COPY ./src/composer.json ./src/composer.lock ./
COPY ./src/database ./database
RUN composer install --prefer-dist --ignore-platform-reqs --no-scripts

# Add user for laravel application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Copy existing application directory contents
COPY --chown=www:www ./ /var/www/
COPY ./.docker/php/php.ini /usr/local/etc/php/php.ini
COPY ./.docker/nginx/conf.d_local /etc/nginx/conf.d
COPY ./.docker/supervisor/conf.d-nonprod /etc/supervisor/conf.d

# Add crontab file in the cron directory
ADD ./src/utils/cron/crontab /etc/crontab
# Give execution rights on the cron job
RUN chmod 0644 /etc/crontab
# Create the log file to be able to run tail
RUN touch /var/log/cron.log

# Make entrypoint executable
COPY .docker/php/entrypoint /entrypoint
RUN chmod +x /entrypoint

USER root
RUN bash -c "echo 'security.limit_extensions = .php .php3 .php4 .php5 .yaml' >> /usr/local/etc/php-fpm.d/www.conf"

EXPOSE 9000

CMD /entrypoint
